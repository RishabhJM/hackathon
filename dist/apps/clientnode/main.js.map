{"version":3,"file":"main.js","mappings":"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","sources":["webpack://clientnode/./apps/clientnode/src/app/app.controller.ts","webpack://clientnode/./apps/clientnode/src/app/app.module.ts","webpack://clientnode/./apps/clientnode/src/app/cell-state.model.ts","webpack://clientnode/./apps/clientnode/src/app/simulatorNode.ts","webpack://clientnode/external commonjs \"@nestjs/common\"","webpack://clientnode/external commonjs \"@nestjs/core\"","webpack://clientnode/external commonjs \"tslib\"","webpack://clientnode/webpack/bootstrap","webpack://clientnode/./apps/clientnode/src/main.ts"],"sourcesContent":["import { Body, Controller, Get, Post } from '@nestjs/common';\nimport { SimulatorNode } from './simulatorNode';\n\n@Controller()\nexport class AppController {\n  node = new SimulatorNode();\n\n  @Get()\n  getData() {\n    return 'Welcome!';\n  }\n\n  @Post()\n  postData(@Body() searchData:any):string {\n  return this.node.OnStep(searchData);\n  }\n}\n","import { AppController } from './app.controller';\nimport { Module } from '@nestjs/common';\n\n@Module({\n  imports: [],\n  controllers: [AppController],\n  providers: [],\n})\nexport class AppModule {}\n","export class CellState {\r\n  m_X = 0;\r\n  m_Y = 0;\r\n  m_bPurchased = false;\r\n\r\n  constructor(x: number, y: number) {\r\n    this.m_X = x;\r\n    this.m_Y = y;\r\n  }\r\n\r\n  X() {\r\n    return this.m_X;\r\n  }\r\n\r\n  Y() {\r\n    return this.m_Y;\r\n  }\r\n\r\n  private m_probability = 1;\r\n\r\n  get Probability() {\r\n    return this.m_probability;\r\n  }\r\n\r\n  set Probability(value: number) {\r\n    if (this.m_probability != 0) {\r\n      if (value < 0) {\r\n        this.m_probability = 0;\r\n      } else {\r\n        this.m_probability = value;\r\n      }\r\n    }\r\n  }\r\n\r\n  BanCell() {\r\n    this.m_probability = 0;\r\n  }\r\n\r\n  MarkAsPurchased() {\r\n    this.m_bPurchased = true;\r\n  }\r\n\r\n  Purchased() {\r\n    return this.m_bPurchased;\r\n  }\r\n\r\n  private m_tryPurchase = false;\r\n  get TryPurchase() {\r\n    return this.m_tryPurchase;\r\n  }\r\n  set TryPurchase(value: boolean) {\r\n    this.m_tryPurchase = value;\r\n  }\r\n\r\n  private m_estimatedReserve = 0;\r\n  get Estimatedreserve() {\r\n    return this.m_estimatedReserve;\r\n  }\r\n  set Estimatedreserve(value: number) {\r\n    this.m_estimatedReserve = value;\r\n  }\r\n\r\n  private m_recoverableReserve = 0;\r\n  get RecoverableReserve() {\r\n    return this.m_recoverableReserve;\r\n  }\r\n  set RecoverableReserve(value: number) {\r\n    this.m_recoverableReserve = value;\r\n  }\r\n\r\n  private m_bIsProducing = false;\r\n  get Producing() {\r\n    return this.m_bIsProducing;\r\n  }\r\n  set Producing(value: boolean) {\r\n    this.m_bIsProducing = value;\r\n  }\r\n\r\n  private m_bIsProducingStopRequested = false;\r\n  get ProducingStopRequested() {\r\n    return this.m_bIsProducingStopRequested;\r\n  }\r\n  set ProducingStopRequested(value: boolean) {\r\n    this.m_bIsProducingStopRequested = value;\r\n  }\r\n\r\n  private m_production = 0;\r\n  get Production() {\r\n    return this.m_production;\r\n  }\r\n  set Production(value: number) {\r\n    this.m_production = value;\r\n  }\r\n\r\n  private m_isDrilled = false;\r\n  get Drilled() {\r\n    return this.m_isDrilled;\r\n  }\r\n  set Drilled(value: boolean) {\r\n    this.m_isDrilled = value;\r\n  }\r\n\r\n  private m_isExplored = false;\r\n  get Explored() {\r\n    return this.m_isExplored;\r\n  }\r\n  set Explored(value: boolean) {\r\n    this.m_isExplored = value;\r\n  }\r\n\r\n  private m_flagForStim = false;\r\n  get FlagForStim() {\r\n    return this.m_flagForStim;\r\n  }\r\n  set FlagForStim(value: boolean) {\r\n    this.m_flagForStim = value;\r\n  }\r\n\r\n  private m_stimed = false;\r\n  get Stimmed() {\r\n    return this.m_stimed;\r\n  }\r\n  set Stimmed(value: boolean) {\r\n    this.m_stimed = value;\r\n  }\r\n}\r\n","/* eslint-disable prefer-const */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\n\r\nimport { CellState } from './cell-state.model';\r\n\r\nexport interface ISimulatorNode {\r\n  OnStep(request: any);\r\n}\r\n\r\nexport class SimulatorNode implements ISimulatorNode {\r\n  m_random(MIN_NUMBER, MAX_NUMBER) {\r\n    return (\r\n      Math.floor(Math.random() * (MAX_NUMBER - MIN_NUMBER + 1)) + MIN_NUMBER\r\n    );\r\n  }\r\n\r\n  m_stepCount = 0;\r\n  private m_money = 0;\r\n  private m_width = 0;\r\n  private m_height = 0;\r\n  private m_X = 0;\r\n  private m_Y = 0;\r\n  private m_index = -1;\r\n  private m_round = -1;\r\n\r\n  private first = true;\r\n\r\n  // Not great variables for randonm strategy....\r\n  private m_buyIndex = -1;\r\n\r\n  // Something to store some cell infromation if you think this will be useful\r\n  private static m_cells: CellState[][] = [];\r\n  public cellStore = [];\r\n  private i=0;\r\n  private ogX=0;\r\n  private ogY=0;\r\n  OnStep(request: any) {\r\n    let result = '';\r\n\r\n    try {\r\n      //\r\n      // Step management. Update status absed on provided parameters from Master\r\n      //\r\n      this.m_stepCount++;\r\n      let lastoperation = '';\r\n      let lastoperationstatus = false;\r\n\r\n      try {\r\n        const operation = this.ParseInput(request, {\r\n          lastoperation,\r\n          lastoperationstatus,\r\n        });\r\n        lastoperation = operation.lastoperation;\r\n        lastoperationstatus = operation.lastoperationstatus;\r\n      } catch (e) {\r\n        result += '<BR>Excep[tion while retreiving client information ' + e;\r\n        return result;\r\n      }\r\n\r\n      \r\n\r\n      // Maybe create a store to save the cell infromation if you plan on using it....\r\n      //\r\n      // Look at the current production\r\n      //\r\n      const production: string = request['production'];\r\n      let resultOfDrilling=0;\r\n      if (production != null) {\r\n        const listOfCellProduction: string[] = production.split(' ');\r\n        const countOfProducingCells: number = listOfCellProduction.length;\r\n\r\n        for (let i = 0; i < countOfProducingCells; i++) {\r\n          const prodinfo: string[] = listOfCellProduction[i].split(',');\r\n          if (prodinfo.length < 3) continue;\r\n\r\n          let x: number = parseInt(prodinfo[0]);\r\n          let y: number = parseInt(prodinfo[1]);\r\n          let p: number = parseInt(prodinfo[2]);\r\n          resultOfDrilling=p;\r\n          \r\n        }\r\n      }\r\n\r\n      if(lastoperation==\"Explore\" && resultOfDrilling<22){\r\n        console.log(resultOfDrilling);\r\n        this.i=8;\r\n        this.m_stepCount+=1;\r\n      }\r\n\r\n      if(lastoperation==\"Drill\" && resultOfDrilling<1){\r\n        console.log(resultOfDrilling);\r\n        this.i++;\r\n        this.m_stepCount+=2;\r\n      }\r\n      let arr=[ 0, 1, 0, -1,1,1,-1 ,-1];\r\n      let arr1=[-1, 0, 1, 0,1,-1,-1,1];\r\n      \r\n      let size=8;\r\n      \r\n      // console.log(resultOfDrilling);\r\n      // Now what should I do\r\n      // You can probably do better than this random strategy......\r\n      if (this.m_buyIndex == -1) {\r\n        // Buy buy buy!\r\n        this.m_X = this.m_random(0, this.m_width);\r\n        this.m_Y = this.m_random(0, this.m_height);\r\n        this.ogX=this.m_X;\r\n        this.ogY=this.m_Y;\r\n        result += this.TryToPurchaseAt(this.m_X, this.m_Y);\r\n        this.cellStore.push({x:this.m_X,y:this.m_Y});\r\n        this.m_buyIndex = this.m_stepCount;\r\n      } else if (this.m_buyIndex == this.m_stepCount - 1) {\r\n        // Blindly try to drill\r\n        result += this.TryToDrillAt(this.m_X, this.m_Y, true);\r\n\r\n      }\r\n      else if (this.m_buyIndex == this.m_stepCount - 2) {\r\n        // Blindly try to stimulate\r\n        result += this.TryToExploreAt(this.m_X, this.m_Y, true);\r\n        \r\n      }\r\n      else if (this.m_buyIndex == this.m_stepCount - 4) {\r\n        // Blindly try to stimulate\r\n        result += this.TryToStimulateAt(this.m_X, this.m_Y, true);\r\n      }\r\n      else if (this.m_buyIndex == this.m_stepCount - 3) {\r\n        // Blindly try to stimulate\r\n        this.StopProduction(this.m_X,this.m_Y);;\r\n      } \r\n      else if (this.m_buyIndex == this.m_stepCount - 5) {\r\n        // Buy buy buy!\r\n        //console.log(resultOfDrilling);\r\n        if(this.i==size){\r\n        \r\n        this.m_X = this.m_random(0, this.m_width);\r\n        this.m_Y = this.m_random(0, this.m_height);\r\n        result += this.TryToPurchaseAt(this.m_X, this.m_Y);\r\n        this.i=0;\r\n        this.ogX=this.m_X;\r\n        this.ogY=this.m_Y;\r\n        }\r\n        else{\r\n          \r\n          this.m_X=this.ogX+arr[this.i];\r\n          this.m_Y=this.ogY+arr1[this.i];\r\n          result+= this.TryToPurchaseAt(this.m_X, this.m_Y);\r\n        \r\n          this.i++;\r\n        }\r\n        this.m_buyIndex = this.m_stepCount;\r\n      }\r\n\r\n\r\n      \r\n    } catch (e) {\r\n      result += '<BR>Exception while handling request ' + e;\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  private ParseInput(\r\n    request: any,\r\n    operation: { lastoperation: string; lastoperationstatus: boolean }\r\n  ) {\r\n    for (const s in request) {\r\n      switch (s) {\r\n        case 'round':\r\n          this.m_round = parseInt(request[s]);\r\n          if (this.m_round == 0) {\r\n            SimulatorNode.m_cells = null;\r\n            this.m_width = 0;\r\n            this.m_height = 0;\r\n          }\r\n          break;\r\n        case 'money':\r\n          this.m_money = parseInt(request[s]);\r\n          break;\r\n        case 'width':\r\n          this.m_width = parseInt(request[s]);\r\n          break;\r\n        case 'height':\r\n          this.m_height = parseInt(request[s]);\r\n          break;\r\n        case 'lastoperation':\r\n          operation.lastoperation = request[s];\r\n          break;\r\n        case 'lastoperationstatus':\r\n          operation.lastoperationstatus = request[s] == 'True';\r\n          break;\r\n        case 'index':\r\n          this.m_index = parseInt(request[s]);\r\n          break;\r\n      }\r\n    }\r\n    return operation;\r\n  }\r\n\r\n  private TryToPurchaseAt(x: number, y: number): string {\r\n    let result = '';\r\n    result += '<Execute>Buy</Execute>';\r\n    result += '<BuyAtX>' + x + '</BuyAtX>';\r\n    result += '<BuyAtY>' + y + '</BuyAtY>';\r\n    return result;\r\n  }\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  private ConfirmPurchaseAt(x: number, y: number): string {\r\n    let result = '';\r\n    // Capture we have bought at X/Y (previous round)\r\n    if (!SimulatorNode.m_cells[this.m_X][this.m_Y]) {\r\n      SimulatorNode.m_cells[this.m_X][this.m_Y] = new CellState(\r\n        this.m_X,\r\n        this.m_Y\r\n      );\r\n    }\r\n\r\n    SimulatorNode.m_cells[this.m_X][this.m_Y].MarkAsPurchased();\r\n    result += '<HR>Purchased ' + this.m_X + ' ' + this.m_Y;\r\n    return result;\r\n  }\r\n\r\n  private StopProduction(x: number, y: number): string {\r\n    let result = '';\r\n    result +=\r\n      '<Execute>StopProduction</Execute><StopProductionAtX>' +\r\n      x +\r\n      '</StopProductionAtX><StopProductionAtY>' +\r\n      y +\r\n      '</StopProductionAtY>';\r\n    return result;\r\n  }\r\n\r\n  private TryToExploreAt(x: number, y: number, slb: boolean): string {\r\n    let result = '';\r\n    result += '<Execute>Explore</Execute>';\r\n    result += '<ExploreAtX>' + x + '</ExploreAtX>';\r\n    result += '<ExploreAtY>' + y + '</ExploreAtY>';\r\n    result += '<ServiceProvider>';\r\n    if (slb) {\r\n      result += 'SLB';\r\n    } else {\r\n      result += 'HAL';\r\n    }\r\n    result += '</ServiceProvider>';\r\n    return result;\r\n  }\r\n  private TryToDrillAt(x: number, y: number, slb: boolean): string {\r\n    let result = '';\r\n    result += '<Execute>Drill</Execute>';\r\n    result += '<DrillAtX>' + x + '</DrillAtX>';\r\n    result += '<DrillAtY>' + y + '</DrillAtY>';\r\n    result += '<ServiceProvider>';\r\n    if (slb) {\r\n      result += 'SLB';\r\n    } else {\r\n      result += 'HAL';\r\n    }\r\n    result += '</ServiceProvider>';\r\n    return result;\r\n  }\r\n  private TryToStimulateAt(x: number, y: number, slb: boolean): string {\r\n    let result = '';\r\n    result += '<Execute>Stimulate</Execute>';\r\n    result += '<StimulateAtX>' + x + '</StimulateAtX>';\r\n    result += '<StimulateAtY>' + y + '</StimulateAtY>';\r\n    result += '<ServiceProvider>';\r\n    if (slb) {\r\n      result += 'SLB';\r\n    } else {\r\n      result += 'HAL';\r\n    }\r\n    result += '</ServiceProvider>';\r\n    return result;\r\n  }\r\n}\r\n","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"tslib\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport { Logger } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\n\nimport { AppModule } from './app/app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  const port = process.env.PORT || 3333;\n  await app.listen(port);\n  Logger.log(\n    `🚀 Application is running on: http://localhost:${port}`\n  );\n}\n\nbootstrap();\n"],"names":[],"sourceRoot":""}